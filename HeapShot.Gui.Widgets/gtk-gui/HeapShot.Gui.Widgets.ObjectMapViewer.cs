// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace HeapShot.Gui.Widgets {
    
    
    public partial class ObjectMapViewer {
        
        private Gtk.HBox hbox3;
        
        private Gtk.ScrolledWindow scrolledwindow2;
        
        private Gtk.TreeView fileList;
        
        private Gtk.Notebook notebook;
        
        private Gtk.Table table1;
        
        private Gtk.Label label3;
        
        private Gtk.Label label4;
        
        private Gtk.Label label5;
        
        private Gtk.Label labelCount;
        
        private Gtk.Label labelMemory;
        
        private Gtk.Label labelName;
        
        private Gtk.Label label9;
        
        private HeapShot.Gui.Widgets.ReferenceTreeViewer allObjectsTree;
        
        private Gtk.Label label2;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize();
            // Widget HeapShot.Gui.Widgets.ObjectMapViewer
            Stetic.BinContainer.Attach(this);
            this.Events = ((Gdk.EventMask)(256));
            this.Name = "HeapShot.Gui.Widgets.ObjectMapViewer";
            // Container child HeapShot.Gui.Widgets.ObjectMapViewer.Gtk.Container+ContainerChild
            this.hbox3 = new Gtk.HBox();
            this.hbox3.Name = "hbox3";
            this.hbox3.Spacing = 6;
            // Container child hbox3.Gtk.Box+BoxChild
            this.scrolledwindow2 = new Gtk.ScrolledWindow();
            this.scrolledwindow2.CanFocus = true;
            this.scrolledwindow2.Name = "scrolledwindow2";
            this.scrolledwindow2.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            this.scrolledwindow2.HscrollbarPolicy = ((Gtk.PolicyType)(2));
            this.scrolledwindow2.ShadowType = ((Gtk.ShadowType)(1));
            // Container child scrolledwindow2.Gtk.Container+ContainerChild
            this.fileList = new Gtk.TreeView();
            this.fileList.CanFocus = true;
            this.fileList.Name = "fileList";
            this.fileList.HeadersVisible = false;
            this.scrolledwindow2.Add(this.fileList);
            this.hbox3.Add(this.scrolledwindow2);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox3[this.scrolledwindow2]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child hbox3.Gtk.Box+BoxChild
            this.notebook = new Gtk.Notebook();
            this.notebook.CanFocus = true;
            this.notebook.Name = "notebook";
            this.notebook.Scrollable = true;
            // Container child notebook.Gtk.Notebook+NotebookChild
            this.table1 = new Gtk.Table(((uint)(3)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            this.table1.BorderWidth = ((uint)(12));
            // Container child table1.Gtk.Table+TableChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.Xalign = 0F;
            this.label3.LabelProp = "Name:";
            this.table1.Add(this.label3);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.label3]));
            w3.XOptions = ((Gtk.AttachOptions)(4));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label4 = new Gtk.Label();
            this.label4.Name = "label4";
            this.label4.Xalign = 0F;
            this.label4.LabelProp = "Object count:";
            this.table1.Add(this.label4);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.label4]));
            w4.TopAttach = ((uint)(1));
            w4.BottomAttach = ((uint)(2));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label5 = new Gtk.Label();
            this.label5.Name = "label5";
            this.label5.Xalign = 0F;
            this.label5.LabelProp = "Total memory:";
            this.table1.Add(this.label5);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table1[this.label5]));
            w5.TopAttach = ((uint)(2));
            w5.BottomAttach = ((uint)(3));
            w5.XOptions = ((Gtk.AttachOptions)(4));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.labelCount = new Gtk.Label();
            this.labelCount.Name = "labelCount";
            this.labelCount.Xalign = 0F;
            this.labelCount.LabelProp = "";
            this.table1.Add(this.labelCount);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table1[this.labelCount]));
            w6.TopAttach = ((uint)(1));
            w6.BottomAttach = ((uint)(2));
            w6.LeftAttach = ((uint)(1));
            w6.RightAttach = ((uint)(2));
            w6.XOptions = ((Gtk.AttachOptions)(4));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.labelMemory = new Gtk.Label();
            this.labelMemory.Name = "labelMemory";
            this.labelMemory.Xalign = 0F;
            this.labelMemory.LabelProp = "";
            this.table1.Add(this.labelMemory);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.labelMemory]));
            w7.TopAttach = ((uint)(2));
            w7.BottomAttach = ((uint)(3));
            w7.LeftAttach = ((uint)(1));
            w7.RightAttach = ((uint)(2));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.labelName = new Gtk.Label();
            this.labelName.Name = "labelName";
            this.labelName.Xalign = 0F;
            this.labelName.LabelProp = "";
            this.table1.Add(this.labelName);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table1[this.labelName]));
            w8.LeftAttach = ((uint)(1));
            w8.RightAttach = ((uint)(2));
            w8.XOptions = ((Gtk.AttachOptions)(4));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            this.notebook.Add(this.table1);
            Gtk.Notebook.NotebookChild w9 = ((Gtk.Notebook.NotebookChild)(this.notebook[this.table1]));
            w9.TabExpand = false;
            // Notebook tab
            this.label9 = new Gtk.Label();
            this.label9.Name = "label9";
            this.label9.LabelProp = "Summary";
            this.notebook.SetTabLabel(this.table1, this.label9);
            // Container child notebook.Gtk.Notebook+NotebookChild
            this.allObjectsTree = new HeapShot.Gui.Widgets.ReferenceTreeViewer();
            this.allObjectsTree.Events = ((Gdk.EventMask)(256));
            this.allObjectsTree.Name = "allObjectsTree";
            this.allObjectsTree.InverseReferences = false;
            this.notebook.Add(this.allObjectsTree);
            Gtk.Notebook.NotebookChild w10 = ((Gtk.Notebook.NotebookChild)(this.notebook[this.allObjectsTree]));
            w10.Position = 1;
            w10.TabExpand = false;
            // Notebook tab
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.LabelProp = "All objects";
            this.notebook.SetTabLabel(this.allObjectsTree, this.label2);
            this.hbox3.Add(this.notebook);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(this.hbox3[this.notebook]));
            w11.Position = 1;
            this.Add(this.hbox3);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
        }
    }
}
